name: Build and Release HLSDK

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-libraries:
    name: Build HLSDK Libraries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [master, bot10]
        arch: [amd64]  # Start with amd64 only as requested
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build libraries
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: builder
          build-args: |
            HLSERVER_BRANCH=${{ matrix.branch }}
            TARGETARCH=${{ matrix.arch }}
          outputs: type=local,dest=./output
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: List built files
        run: ls -la ./output/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hlsdk-${{ matrix.branch }}-${{ matrix.arch }}
          path: ./output/
          retention-days: 7

  build-container:
    name: Build Container Images
    runs-on: ubuntu-latest
    needs: build-libraries
    strategy:
      matrix:
        branch: [master, bot10]
        arch: [amd64]  # Start with amd64 only
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-${{ matrix.branch }}-${{ matrix.arch }}
            type=ref,event=pr,suffix=-${{ matrix.branch }}-${{ matrix.arch }}
            type=semver,pattern={{version}},suffix=-${{ matrix.branch }}-${{ matrix.arch }}
            type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.branch }}-${{ matrix.arch }}
            type=raw,value=latest,suffix=-${{ matrix.branch }}-${{ matrix.arch }},enable={{is_default_branch}}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/${{ matrix.arch }}
          build-args: |
            HLSERVER_BRANCH=${{ matrix.branch }}
            TARGETARCH=${{ matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-libraries
    if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./releases

      - name: Organize release files
        run: |
          mkdir -p ./release-files
          
          # Process master branch files
          if [ -d "./releases/hlsdk-master-amd64" ]; then
            cp ./releases/hlsdk-master-amd64/* ./release-files/ 2>/dev/null || true
          fi
          
          # Process bot10 branch files  
          if [ -d "./releases/hlsdk-bot10-amd64" ]; then
            cp ./releases/hlsdk-bot10-amd64/* ./release-files/ 2>/dev/null || true
          fi
          
          # List final files
          echo "Release files:"
          ls -la ./release-files/

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-files/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Manual Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: manual-${{ github.run_number }}
          name: Manual Release ${{ github.run_number }}
          files: ./release-files/*
          draft: false
          prerelease: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
