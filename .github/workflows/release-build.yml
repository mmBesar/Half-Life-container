name: Build and Release HLSDK Libraries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-libraries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64] # arm64 commented out for initial testing
        # arch: [amd64, arm64] # uncomment this line and comment above when ready for arm64
        hlsdk_branch: [master, bot10]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Register QEMU for emulation
        uses: docker/setup-qemu-action@v3

      - name: Build libraries in container
        run: |
          # Create a temporary Dockerfile for building libraries
          cat > Dockerfile.build << 'EOF'
          FROM debian:bookworm-slim
          
          RUN apt-get update && apt-get install -y \
              git \
              build-essential \
              cmake \
              python3 \
              pkg-config \
              && rm -rf /var/lib/apt/lists/*
          
          WORKDIR /build
          EOF
          
          # Build the container and extract libraries
          docker buildx build \
            --platform linux/${{ matrix.arch }} \
            --load \
            -f Dockerfile.build \
            -t hlsdk-builder:${{ matrix.arch }} .
          
          # Run build process
          docker run --rm \
            --platform linux/${{ matrix.arch }} \
            -v $(pwd)/output:/output \
            hlsdk-builder:${{ matrix.arch }} \
            bash -c "
              git clone -b ${{ matrix.hlsdk_branch }} https://github.com/FWGS/hlsdk-portable.git
              cd hlsdk-portable
              mkdir build && cd build
              cmake .. -DCMAKE_BUILD_TYPE=Release
              make -j\$(nproc)
              
              # Copy built libraries to output
              mkdir -p /output/${{ matrix.hlsdk_branch }}
              if [ '${{ matrix.hlsdk_branch }}' = 'master' ]; then
                cp dlls/hl.so /output/${{ matrix.hlsdk_branch }}/hl_${{ matrix.arch }}.so
                cp cl_dll/client.so /output/${{ matrix.hlsdk_branch }}/client_${{ matrix.arch }}.so
              else
                cp dlls/hl.so /output/${{ matrix.hlsdk_branch }}/bot_${{ matrix.arch }}.so
              fi
            "

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hlsdk-${{ matrix.hlsdk_branch }}-${{ matrix.arch }}
          path: output/${{ matrix.hlsdk_branch }}/

  create-release:
    needs: build-libraries
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Organize release files
        run: |
          mkdir -p release-files/master release-files/bot10
          
          # Move master branch files
          find release-artifacts -name "hl_*.so" -exec cp {} release-files/master/ \;
          find release-artifacts -name "client_*.so" -exec cp {} release-files/master/ \;
          
          # Move bot10 branch files
          find release-artifacts -name "bot_*.so" -exec cp {} release-files/bot10/ \;
          
          # List files for verification
          echo "Master branch files:"
          ls -la release-files/master/
          echo "Bot10 branch files:"
          ls -la release-files/bot10/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-files/master/*
            release-files/bot10/*
          body: |
            ## HLSDK Libraries Release
            
            This release contains compiled HLSDK libraries for both regular Half-Life and bot-enabled versions.
            
            ### Master Branch (Regular Half-Life)
            - `hl_amd64.so` - Server library for AMD64
            - `client_amd64.so` - Client library for AMD64
            <!-- - `hl_arm64.so` - Server library for ARM64 (uncomment when ready) -->
            <!-- - `client_arm64.so` - Client library for ARM64 (uncomment when ready) -->
            
            ### Bot10 Branch (With Bot Support)
            - `bot_amd64.so` - Server library with bot support for AMD64
            <!-- - `bot_arm64.so` - Server library with bot support for ARM64 (uncomment when ready) -->
            
            ### Usage
            Place the appropriate `.so` files in your Xash3D game directory's `dlls/` folder.
          draft: false
          prerelease: false
