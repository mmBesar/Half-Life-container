name: "Build Xash3D Server & HLSDK"

on:
  push:
    branches: [main, master]
    tags: ['v*']
  pull_request:
    branches: [main, master]
  schedule:
    - cron: '0 0 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/xash3d-server

jobs:
  hlsdk-master:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.bldx-hlsdk-master-${{ matrix.arch }}
          key: ${{ runner.os }}-hlsdk-master-${{ matrix.arch }}-${{ github.sha }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          target: hlsdk-master-builder
          outputs: type=local,dest=./artifacts/hlsdk-master-${{ matrix.arch }}
          cache-from: type=local,src=/tmp/.bldx-hlsdk-master-${{ matrix.arch }}
          cache-to: type=local,dest=/tmp/.bldx-hlsdk-master-${{ matrix.arch }}-new,mode=max
      - run: |
          mkdir -p releases/hlsdk-master
          cp artifacts/hlsdk-master-${{ matrix.arch }}/build/dlls/hl.so releases/hlsdk-master/hl_${{ matrix.arch }}.so
          cp artifacts/hlsdk-master-${{ matrix.arch }}/build/cl_dll/client.so releases/hlsdk-master/client_${{ matrix.arch }}.so
      - uses: actions/upload-artifact@v4
        with:
          name: hlsdk-master-${{ matrix.arch }}
          path: releases/hlsdk-master/

  hlsdk-bot10:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.bldx-hlsdk-bot10-${{ matrix.arch }}
          key: ${{ runner.os }}-hlsdk-bot10-${{ matrix.arch }}-${{ github.sha }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          target: hlsdk-bot10-builder
          outputs: type=local,dest=./artifacts/hlsdk-bot10-${{ matrix.arch }}
          cache-from: type=local,src=/tmp/.bldx-hlsdk-bot10-${{ matrix.arch }}
          cache-to: type=local,dest=/tmp/.bldx-hlsdk-bot10-${{ matrix.arch }}-new,mode=max
      - run: |
          mkdir -p releases/hlsdk-bot10
          cp artifacts/hlsdk-bot10-${{ matrix.arch }}/build/dlls/hl.so releases/hlsdk-bot10/bot_${{ matrix.arch }}.so
      - uses: actions/upload-artifact@v4
        with:
          name: hlsdk-bot10-${{ matrix.arch }}
          path: releases/hlsdk-bot10/

  docker:
    runs-on: ubuntu-latest
    needs: [hlsdk-master, hlsdk-bot10]
    strategy:
      matrix:
        arch: [amd64]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: actions/cache@v3
        with:
          path: /tmp/.bldx-${{ matrix.arch }}
          key: ${{ runner.os }}-bldx-${{ matrix.arch }}-${{ github.sha }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.arch }}
          cache-from: type=local,src=/tmp/.bldx-${{ matrix.arch }}
          cache-to: type=local,dest=/tmp/.bldx-${{ matrix.arch }}-new,mode=max

  manifest:
    runs-on: ubuntu-latest
    needs: [docker]
    if: github.event_name != 'pull_request'
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - run: |
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker manifest create $tag $tag-amd64
            docker manifest push $tag
          done

  release:
    runs-on: ubuntu-latest
    needs: [hlsdk-master, hlsdk-bot10]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: hlsdk-master-amd64
          path: releases/hlsdk-master/
      - uses: actions/download-artifact@v4
        with:
          name: hlsdk-bot10-amd64
          path: releases/hlsdk-bot10/
      - name: Archive artifacts
        run: |
          cd releases/hlsdk-master && tar -czf ../hlsdk-master-${{ github.ref_name }}.tar.gz *
          cd ../hlsdk-bot10 && tar -czf ../hlsdk-bot10-${{ github.ref_name }}.tar.gz *
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/hlsdk-master-${{ github.ref_name }}.tar.gz
            releases/hlsdk-bot10-${{ github.ref_name }}.tar.gz
          body: |
            ## Xash3D Server ${{ github.ref_name }}

            Includes multi-arch Docker image & HLSDK .so's.

            ### HLSDK Master:
            - hl_amd64.so
            - client_amd64.so

            ### HLSDK Bot10:
            - bot_amd64.so
